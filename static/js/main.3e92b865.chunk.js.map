{"version":3,"sources":["context/PhotoContext.js","api/config.js","components/Form.js","components/Navigation.js","components/Header.js","components/NoImages.js","components/Image.js","components/Gallery.js","components/Loader.js","components/Container.js","components/Item.js","components/Search.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["PhotoContext","createContext","PhotoContextProvider","props","useState","images","setImages","loading","setLoading","Provider","value","runSearch","query","axios","get","then","response","data","photos","photo","catch","error","console","log","children","Form","handleSubmit","history","searchEntry","setSearchEntry","className","onSubmit","e","type","name","placeholder","onChange","target","trim","disabled","height","width","d","fill","fillRule","Navigation","to","Header","NoImages","Image","url","title","src","alt","Gallery","noImages","results","length","map","image","farm","server","id","secret","key","Loader","Container","searchTerm","useContext","useEffect","Item","Search","NotFound","App","searchInput","preventDefault","currentTarget","reset","push","basename","render","exact","path","match","params","component","Component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e92b865.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apiKey } from \"../api/config\";\r\nexport const PhotoContext = createContext();\r\n\r\nconst PhotoContextProvider = props => {\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const runSearch = query => {\r\n    axios\r\n      .get(\r\n        `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`\r\n      )\r\n      .then(response => {\r\n        setImages(response.data.photos.photo);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(\r\n          \"Encountered an error with fetching and parsing data\",\r\n          error\r\n        );\r\n      });\r\n  };\r\n  return (\r\n    <PhotoContext.Provider value={{ images, loading, runSearch }}>\r\n      {props.children}\r\n    </PhotoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PhotoContextProvider;\r\n","export const apiKey = \"636e1481b4f3c446d26b8eb6ebfe7127\";\r\n","import React, { useState } from \"react\";\r\n\r\nconst Form = ({ handleSubmit, history }) => {\r\n  const [searchEntry, setSearchEntry] = useState(\"\");\r\n  // update search text state\r\n  const updateSearchInput = e => {\r\n    setSearchEntry(e.target.value);\r\n  };\r\n  return (\r\n    <form\r\n      className=\"search-form\"\r\n      onSubmit={e => handleSubmit(e, history, searchEntry)}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Search...\"\r\n        onChange={updateSearchInput}\r\n        value={searchEntry}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className={`search-button ${searchEntry.trim() ? \"active\" : null}`}\r\n        disabled={!searchEntry.trim()}\r\n      >\r\n        <svg height=\"32\" width=\"32\">\r\n          <path\r\n            d=\"M19.427 21.427a8.5 8.5 0 1 1 2-2l5.585 5.585c.55.55.546 1.43 0 1.976l-.024.024a1.399 1.399 0 0 1-1.976 0l-5.585-5.585zM14.5 21a6.5 6.5 0 1 0 0-13 6.5 6.5 0 0 0 0 13z\"\r\n            fill=\"#ffffff\"\r\n            fillRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"main-nav\">\r\n      <ul>\r\n        <li><NavLink to=\"/mountain\">Mountain</NavLink></li>\r\n        <li><NavLink to=\"/beach\">Beaches</NavLink></li>\r\n        <li><NavLink to=\"/bird\">Birds</NavLink></li>\r\n        <li><NavLink to=\"/food\">Food</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst Header = ({ history, handleSubmit }) => {\r\n  return (\r\n    <div>\r\n      <h1>SnapShot</h1>\r\n      <Form history={history} handleSubmit={handleSubmit} />\r\n      <Navigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst NoImages = () => (\r\n  <div>\r\n    <h2>No Images Found</h2>\r\n    <p>Please try a different search term</p>\r\n  </div>\r\n);\r\n\r\nexport default NoImages;\r\n","import React from \"react\";\r\n\r\nconst Image = ({ url, title }) => (\r\n  <li>\r\n    <img src={url} alt={title} />\r\n  </li>\r\n);\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport NoImages from \"./NoImages\";\r\nimport Image from \"./Image\";\r\nconst Gallery = props => {\r\n  const results = props.data;\r\n  let images;\r\n  let noImages;\r\n  // map variables to each item in fetched image array and return image component\r\n  if (results.length > 0) {\r\n    images = results.map(image => {\r\n      let farm = image.farm;\r\n      let server = image.server;\r\n      let id = image.id;\r\n      let secret = image.secret;\r\n      let title = image.title;\r\n      let url = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`;\r\n      return <Image url={url} key={id} alt={title} />;\r\n    });\r\n  } else {\r\n    noImages = <NoImages />; // return 'not found' component if no images fetched\r\n  }\r\n  return (\r\n    <div>\r\n      <ul>{images}</ul>\r\n      {noImages}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { PhotoContext } from \"../context/PhotoContext\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Container = ({ searchTerm }) => {\r\n  const { images, loading, runSearch } = useContext(PhotoContext);\r\n  useEffect(() => {\r\n    runSearch(searchTerm);\r\n    // eslint-disable-next-line\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div className=\"photo-container\">\r\n      {loading ? <Loader /> : <Gallery data={images} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport Container from \"./Container\";\r\n\r\nconst Item = ({ searchTerm }) => {\r\n  return (\r\n    <div>\r\n      <h2>{searchTerm} Pictures</h2>\r\n      <Container searchTerm={searchTerm} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Container from \"./Container\";\r\n\r\nconst Search = ({ searchTerm }) => {\r\n  return (\r\n    <div>\r\n      <h2>{searchTerm} Images</h2>\r\n      <Container searchTerm={searchTerm} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div className=\"not-found\">\r\n    <h2>Page Not Found</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport PhotoContextProvider from \"./context/PhotoContext\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Item from \"./components/Item\";\r\nimport Search from \"./components/Search\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\nclass App extends Component {\r\n  // Prevent page reload, clear input, set URL and push history on submit\r\n  handleSubmit = (e, history, searchInput) => {\r\n    e.preventDefault();\r\n    e.currentTarget.reset();\r\n    let url = `/search/${searchInput}`;\r\n    history.push(url);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <PhotoContextProvider>\r\n        <HashRouter basename=\"/SnapScout\">\r\n          <div className=\"container\">\r\n            <Route\r\n              render={props => (\r\n                <Header\r\n                  handleSubmit={this.handleSubmit}\r\n                  history={props.history}\r\n                />\r\n              )}\r\n            />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => <Redirect to=\"/mountain\" />}\r\n              />\r\n\r\n              <Route\r\n                path=\"/mountain\"\r\n                render={() => <Item searchTerm=\"mountain\" />}\r\n              />\r\n              <Route path=\"/beach\" render={() => <Item searchTerm=\"beach\" />} />\r\n              <Route path=\"/bird\" render={() => <Item searchTerm=\"bird\" />} />\r\n              <Route path=\"/food\" render={() => <Item searchTerm=\"food\" />} />\r\n              <Route\r\n                path=\"/search/:searchInput\"\r\n                render={props => (\r\n                  <Search searchTerm={props.match.params.searchInput} />\r\n                )}\r\n              />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </HashRouter>\r\n      </PhotoContextProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}